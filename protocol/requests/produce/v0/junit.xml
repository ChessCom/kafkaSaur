<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="161" failures="0" time="11.188">
  <testsuite name="Protocol &gt; Requests &gt; Metadata &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:08" time="2.4" tests="4">
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v1 response decode" name="Protocol &gt; Requests &gt; Metadata &gt; v1 response decode" time="0.007">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v1 response parse" name="Protocol &gt; Requests &gt; Metadata &gt; v1 response parse" time="0.001">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v1 response when topicErrorCode is different than SUCCESS_CODE" name="Protocol &gt; Requests &gt; Metadata &gt; v1 response when topicErrorCode is different than SUCCESS_CODE" time="0.002">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v1 response when partitionErrorCode is different than SUCCESS_CODE" name="Protocol &gt; Requests &gt; Metadata &gt; v1 response when partitionErrorCode is different than SUCCESS_CODE" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Produce &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:08" time="2.373" tests="3">
    <testcase classname="Protocol &gt; Requests &gt; Produce &gt; v0 response decode" name="Protocol &gt; Requests &gt; Produce &gt; v0 response decode" time="0.007">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Produce &gt; v0 response parse" name="Protocol &gt; Requests &gt; Produce &gt; v0 response parse" time="0.001">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Produce &gt; v0 response when errorCode is different than SUCCESS_CODE" name="Protocol &gt; Requests &gt; Produce &gt; v0 response when errorCode is different than SUCCESS_CODE" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Metadata &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:08" time="2.463" tests="4">
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v2 response decode" name="Protocol &gt; Requests &gt; Metadata &gt; v2 response decode" time="0.008">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v2 response parse" name="Protocol &gt; Requests &gt; Metadata &gt; v2 response parse" time="0.001">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v2 response when topicErrorCode is different than SUCCESS_CODE" name="Protocol &gt; Requests &gt; Metadata &gt; v2 response when topicErrorCode is different than SUCCESS_CODE" time="0.003">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v2 response when partitionErrorCode is different than SUCCESS_CODE" name="Protocol &gt; Requests &gt; Metadata &gt; v2 response when partitionErrorCode is different than SUCCESS_CODE" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Metadata &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:08" time="2.421" tests="4">
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v0 response decode" name="Protocol &gt; Requests &gt; Metadata &gt; v0 response decode" time="0.008">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v0 response parse" name="Protocol &gt; Requests &gt; Metadata &gt; v0 response parse" time="0.001">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v0 response when topicErrorCode is different than SUCCESS_CODE" name="Protocol &gt; Requests &gt; Metadata &gt; v0 response when topicErrorCode is different than SUCCESS_CODE" time="0.002">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v0 response when partitionErrorCode is different than SUCCESS_CODE" name="Protocol &gt; Requests &gt; Metadata &gt; v0 response when partitionErrorCode is different than SUCCESS_CODE" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Produce &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:08" time="2.484" tests="3">
    <testcase classname="Protocol &gt; Requests &gt; Produce &gt; v1 response decode" name="Protocol &gt; Requests &gt; Produce &gt; v1 response decode" time="0.009">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Produce &gt; v1 response parse" name="Protocol &gt; Requests &gt; Produce &gt; v1 response parse" time="0.001">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Produce &gt; v1 response when errorCode is different than SUCCESS_CODE" name="Protocol &gt; Requests &gt; Produce &gt; v1 response when errorCode is different than SUCCESS_CODE" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; SaslAuthenticate &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:08" time="2.471" tests="3">
    <testcase classname="Protocol &gt; Requests &gt; SaslAuthenticate &gt; v1 PLAIN response" name="Protocol &gt; Requests &gt; SaslAuthenticate &gt; v1 PLAIN response" time="0.01">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; SaslAuthenticate &gt; v1 SCRAM response" name="Protocol &gt; Requests &gt; SaslAuthenticate &gt; v1 SCRAM response" time="0.009">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; SaslAuthenticate &gt; v1 parse uses the custom message when errorCode SASL_AUTHENTICATION_FAILED" name="Protocol &gt; Requests &gt; SaslAuthenticate &gt; v1 parse uses the custom message when errorCode SASL_AUTHENTICATION_FAILED" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; SaslAuthenticate &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:08" time="2.45" tests="3">
    <testcase classname="Protocol &gt; Requests &gt; SaslAuthenticate &gt; v0 PLAIN response" name="Protocol &gt; Requests &gt; SaslAuthenticate &gt; v0 PLAIN response" time="0.011">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; SaslAuthenticate &gt; v0 SCRAM response" name="Protocol &gt; Requests &gt; SaslAuthenticate &gt; v0 SCRAM response" time="0.009">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; SaslAuthenticate &gt; v0 parse uses the custom message when errorCode SASL_AUTHENTICATION_FAILED" name="Protocol &gt; Requests &gt; SaslAuthenticate &gt; v0 parse uses the custom message when errorCode SASL_AUTHENTICATION_FAILED" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; EndTxn &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:08" time="3.856" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; EndTxn &gt; v1 response" name="Protocol &gt; Requests &gt; EndTxn &gt; v1 response" time="0.012">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; EndTxn &gt; v1 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; EndTxn &gt; v1 throws KafkaJSProtocolError if the api is not supported" time="0.074">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Heartbeat &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:08" time="3.866" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; Heartbeat &gt; v0 response" name="Protocol &gt; Requests &gt; Heartbeat &gt; v0 response" time="0.013">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Heartbeat &gt; v0 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; Heartbeat &gt; v0 throws KafkaJSProtocolError if the api is not supported" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; LeaveGroup &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:08" time="3.925" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; LeaveGroup &gt; v0 response" name="Protocol &gt; Requests &gt; LeaveGroup &gt; v0 response" time="0.013">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; LeaveGroup &gt; v0 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; LeaveGroup &gt; v0 throws KafkaJSProtocolError if the api is not supported" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; JoinGroup &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:08" time="3.916" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; JoinGroup &gt; v1 response" name="Protocol &gt; Requests &gt; JoinGroup &gt; v1 response" time="0.026">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; JoinGroup &gt; v1 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; JoinGroup &gt; v1 throws KafkaJSProtocolError if the api is not supported" time="0.085">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; FindCoordinator &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:10" time="2.128" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; FindCoordinator &gt; v0 response" name="Protocol &gt; Requests &gt; FindCoordinator &gt; v0 response" time="0.02">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; FindCoordinator &gt; v0 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; FindCoordinator &gt; v0 throws KafkaJSProtocolError if the api is not supported" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; InitProducerId &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:10" time="2.083" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; InitProducerId &gt; v0 response" name="Protocol &gt; Requests &gt; InitProducerId &gt; v0 response" time="0.015">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; InitProducerId &gt; v0 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; InitProducerId &gt; v0 throws KafkaJSProtocolError if the api is not supported" time="0.081">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; JoinGroup &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:10" time="2.216" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; JoinGroup &gt; v0 response" name="Protocol &gt; Requests &gt; JoinGroup &gt; v0 response" time="0.031">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; JoinGroup &gt; v0 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; JoinGroup &gt; v0 throws KafkaJSProtocolError if the api is not supported" time="0.126">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:10" time="2.15" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v0 response" name="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v0 response" time="0.012">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v0 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v0 throws KafkaJSProtocolError if the api is not supported" time="0.094">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; InitProducerId &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:10" time="2.178" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; InitProducerId &gt; v1 response" name="Protocol &gt; Requests &gt; InitProducerId &gt; v1 response" time="0.019">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; InitProducerId &gt; v1 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; InitProducerId &gt; v1 throws KafkaJSProtocolError if the api is not supported" time="0.086">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:11" time="0.865" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v1 response" name="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v1 response" time="0.011">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v1 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v1 throws KafkaJSProtocolError if the api is not supported" time="0.075">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; SyncGroup &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:10" time="2.322" tests="3">
    <testcase classname="Protocol &gt; Requests &gt; SyncGroup &gt; v0 response" name="Protocol &gt; Requests &gt; SyncGroup &gt; v0 response" time="0.019">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; SyncGroup &gt; v0 handles empty member assignment" name="Protocol &gt; Requests &gt; SyncGroup &gt; v0 handles empty member assignment" time="0.006">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; SyncGroup &gt; v0 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; SyncGroup &gt; v0 throws KafkaJSProtocolError if the api is not supported" time="0.08">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; ApiVersions &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:12" time="0.995" tests="3">
    <testcase classname="Protocol &gt; Requests &gt; ApiVersions &gt; v2 response" name="Protocol &gt; Requests &gt; ApiVersions &gt; v2 response" time="0.019">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; ApiVersions &gt; v2 defaults throttle_time_ms if it is not provided in the response" name="Protocol &gt; Requests &gt; ApiVersions &gt; v2 defaults throttle_time_ms if it is not provided in the response" time="0.009">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; ApiVersions &gt; v2 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; ApiVersions &gt; v2 throws KafkaJSProtocolError if the api is not supported" time="0.133">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; SASLHandshake &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:10" time="2.292" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; SASLHandshake &gt; v0 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; SASLHandshake &gt; v0 throws KafkaJSProtocolError if the api is not supported" time="0.079">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; ApiVersions &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:12" time="1.059" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; ApiVersions &gt; v0 response" name="Protocol &gt; Requests &gt; ApiVersions &gt; v0 response" time="0.073">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; ApiVersions &gt; v0 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; ApiVersions &gt; v0 throws KafkaJSProtocolError if the api is not supported" time="0.118">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Fetch &gt; v4" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:11" time="1.241" tests="6">
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v4 response" name="Protocol &gt; Requests &gt; Fetch &gt; v4 response" time="0.027">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v4 response with GZIP" name="Protocol &gt; Requests &gt; Fetch &gt; v4 response with GZIP" time="0.079">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v4 response with 0.10 format" name="Protocol &gt; Requests &gt; Fetch &gt; v4 response with 0.10 format" time="0.006">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v4 response with several RecordBatch (from Scala producer)" name="Protocol &gt; Requests &gt; Fetch &gt; v4 response with several RecordBatch (from Scala producer)" time="0.092">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v4 response with mixed formats (0.10 MessageSet + 0.11 RecordBatch) decode only the 0.10 messages, 0.11 should be decoded on the next request" name="Protocol &gt; Requests &gt; Fetch &gt; v4 response with mixed formats (0.10 MessageSet + 0.11 RecordBatch) decode only the 0.10 messages, 0.11 should be decoded on the next request" time="0.155">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v4 response with an unconfigured compression codec (snappy) throws KafkaJSNotImplemented error" name="Protocol &gt; Requests &gt; Fetch &gt; v4 response with an unconfigured compression codec (snappy) throws KafkaJSNotImplemented error" time="0.154">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Metadata &gt; v6" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:12" time="0.8" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v6 response" name="Protocol &gt; Requests &gt; Metadata &gt; v6 response" time="0.019">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v6 response with offline replicas" name="Protocol &gt; Requests &gt; Metadata &gt; v6 response with offline replicas" time="0.103">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; DeleteTopics &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:12" time="0.88" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; DeleteTopics &gt; v1 response" name="Protocol &gt; Requests &gt; DeleteTopics &gt; v1 response" time="0.093">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Fetch &gt; v9" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:12" time="0.936" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v9 response" name="Protocol &gt; Requests &gt; Fetch &gt; v9 response" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Fetch &gt; v8" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:12" time="0.94" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v8 response" name="Protocol &gt; Requests &gt; Fetch &gt; v8 response" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; JoinGroup &gt; v3" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:13" time="0.765" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; JoinGroup &gt; v3 response" name="Protocol &gt; Requests &gt; JoinGroup &gt; v3 response" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; ApiVersions &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:12" time="1.095" tests="3">
    <testcase classname="Protocol &gt; Requests &gt; ApiVersions &gt; v1 response" name="Protocol &gt; Requests &gt; ApiVersions &gt; v1 response" time="0.017">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; ApiVersions &gt; v1 defaults throttle_time_ms if it is not provided in the response" name="Protocol &gt; Requests &gt; ApiVersions &gt; v1 defaults throttle_time_ms if it is not provided in the response" time="0.009">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; ApiVersions &gt; v1 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; ApiVersions &gt; v1 throws KafkaJSProtocolError if the api is not supported" time="0.091">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; EndTxn &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:12" time="1.061" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; EndTxn &gt; v0 response" name="Protocol &gt; Requests &gt; EndTxn &gt; v0 response" time="0.037">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; EndTxn &gt; v0 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; EndTxn &gt; v0 throws KafkaJSProtocolError if the api is not supported" time="0.083">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Metadata &gt; v5" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:13" time="0.834" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v5 response" name="Protocol &gt; Requests &gt; Metadata &gt; v5 response" time="0.013">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v5 response with offline replicas" name="Protocol &gt; Requests &gt; Metadata &gt; v5 response with offline replicas" time="0.125">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Fetch &gt; v7" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:12" time="1.016" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v7 response" name="Protocol &gt; Requests &gt; Fetch &gt; v7 response" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; CreatePartitions &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:13" time="0.776" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; CreatePartitions &gt; v0 response" name="Protocol &gt; Requests &gt; CreatePartitions &gt; v0 response" time="0.072">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Fetch &gt; v6" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:13" time="0.966" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v6 response" name="Protocol &gt; Requests &gt; Fetch &gt; v6 response" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Fetch &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:13" time="0.731" tests="4">
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v0 response" name="Protocol &gt; Requests &gt; Fetch &gt; v0 response" time="0.037">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v0 response with GZIP" name="Protocol &gt; Requests &gt; Fetch &gt; v0 response with GZIP" time="0.022">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v0 throw KafkaJSOffsetOutOfRange error when the requested offset is not within the range of offsets maintained by the server" name="Protocol &gt; Requests &gt; Fetch &gt; v0 throw KafkaJSOffsetOutOfRange error when the requested offset is not within the range of offsets maintained by the server" time="0.003">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v0 throw KafkaJSProtocolError for all other errors" name="Protocol &gt; Requests &gt; Fetch &gt; v0 throw KafkaJSProtocolError for all other errors" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Fetch &gt; v10" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:13" time="0.924" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v10 response" name="Protocol &gt; Requests &gt; Fetch &gt; v10 response" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; FindCoordinator &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:13" time="0.78" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; FindCoordinator &gt; v1 response" name="Protocol &gt; Requests &gt; FindCoordinator &gt; v1 response" time="0.015">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; FindCoordinator &gt; v1 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; FindCoordinator &gt; v1 throws KafkaJSProtocolError if the api is not supported" time="0.089">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; OffsetCommit &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:13" time="0.79" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; OffsetCommit &gt; v2 response" name="Protocol &gt; Requests &gt; OffsetCommit &gt; v2 response" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; FindCoordinator &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:13" time="0.849" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; FindCoordinator &gt; v2 response" name="Protocol &gt; Requests &gt; FindCoordinator &gt; v2 response" time="0.02">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; FindCoordinator &gt; v2 throws KafkaJSProtocolError if the api is not supported" name="Protocol &gt; Requests &gt; FindCoordinator &gt; v2 throws KafkaJSProtocolError if the api is not supported" time="0.102">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Heartbeat &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:13" time="0.803" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Heartbeat &gt; v1 response" name="Protocol &gt; Requests &gt; Heartbeat &gt; v1 response" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; CreateTopics &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:14" time="0.755" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; CreateTopics &gt; v2 response" name="Protocol &gt; Requests &gt; CreateTopics &gt; v2 response" time="0.097">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Produce &gt; v7" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:13" time="0.771" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Produce &gt; v7 response" name="Protocol &gt; Requests &gt; Produce &gt; v7 response" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Produce &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:14" time="0.674" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; Produce &gt; v2 response" name="Protocol &gt; Requests &gt; Produce &gt; v2 response" time="0.019">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Produce &gt; v2 response with GZIP" name="Protocol &gt; Requests &gt; Produce &gt; v2 response with GZIP" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Fetch &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:13" time="0.958" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v1 response" name="Protocol &gt; Requests &gt; Fetch &gt; v1 response" time="0.081">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v1 response with GZIP" name="Protocol &gt; Requests &gt; Fetch &gt; v1 response with GZIP" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Heartbeat &gt; v3" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:14" time="0.8" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Heartbeat &gt; v3 response" name="Protocol &gt; Requests &gt; Heartbeat &gt; v3 response" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Fetch &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:14" time="0.697" tests="4">
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v2 response" name="Protocol &gt; Requests &gt; Fetch &gt; v2 response" time="0.015">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v2 response with GZIP" name="Protocol &gt; Requests &gt; Fetch &gt; v2 response with GZIP" time="0.04">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v2 response with partial messages and many partitions" name="Protocol &gt; Requests &gt; Fetch &gt; v2 response with partial messages and many partitions" time="0.013">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v2 response with not enough bytes to read the message size or offset (index out of range)" name="Protocol &gt; Requests &gt; Fetch &gt; v2 response with not enough bytes to read the message size or offset (index out of range)" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; DescribeGroups &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:14" time="0.635" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; DescribeGroups &gt; v2 response" name="Protocol &gt; Requests &gt; DescribeGroups &gt; v2 response" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Produce &gt; v3" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:14" time="0.589" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Produce &gt; v3 response" name="Protocol &gt; Requests &gt; Produce &gt; v3 response" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; DescribeConfigs &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:14" time="0.708" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; DescribeConfigs &gt; v2 response" name="Protocol &gt; Requests &gt; DescribeConfigs &gt; v2 response" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; AlterConfigs &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:14" time="0.832" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; AlterConfigs &gt; v1 response" name="Protocol &gt; Requests &gt; AlterConfigs &gt; v1 response" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; CreateTopics &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:14" time="0.806" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; CreateTopics &gt; v0 response" name="Protocol &gt; Requests &gt; CreateTopics &gt; v0 response" time="0.046">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; DescribeConfigs &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:14" time="0.74" tests="3">
    <testcase classname="Protocol &gt; Requests &gt; DescribeConfigs &gt; v0 response" name="Protocol &gt; Requests &gt; DescribeConfigs &gt; v0 response" time="0.019">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; DescribeConfigs &gt; v0 ConfigSource backporting should be set to TOPIC_CONFIG when the altered config belongs to a topic resource" name="Protocol &gt; Requests &gt; DescribeConfigs &gt; v0 ConfigSource backporting should be set to TOPIC_CONFIG when the altered config belongs to a topic resource" time="0.006">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; DescribeConfigs &gt; v0 ConfigSource backporting should be set to STATIC_BROKER_CONFIG when the altered config belongs to a broker resource" name="Protocol &gt; Requests &gt; DescribeConfigs &gt; v0 ConfigSource backporting should be set to STATIC_BROKER_CONFIG when the altered config belongs to a broker resource" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; CreatePartitions &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:14" time="0.724" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; CreatePartitions &gt; v1 response" name="Protocol &gt; Requests &gt; CreatePartitions &gt; v1 response" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; SyncGroup &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:14" time="0.742" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; SyncGroup &gt; v2 response" name="Protocol &gt; Requests &gt; SyncGroup &gt; v2 response" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; CreateTopics &gt; v3" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:14" time="0.679" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; CreateTopics &gt; v3 response" name="Protocol &gt; Requests &gt; CreateTopics &gt; v3 response" time="0.051">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; JoinGroup &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:14" time="0.711" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; JoinGroup &gt; v2 response" name="Protocol &gt; Requests &gt; JoinGroup &gt; v2 response" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Produce &gt; v5" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:15" time="0.682" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Produce &gt; v5 response" name="Protocol &gt; Requests &gt; Produce &gt; v5 response" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; OffsetFetch &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:15" time="0.59" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; OffsetFetch &gt; v2 response" name="Protocol &gt; Requests &gt; OffsetFetch &gt; v2 response" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; DescribeGroups &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:15" time="0.62" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; DescribeGroups &gt; v1 response" name="Protocol &gt; Requests &gt; DescribeGroups &gt; v1 response" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; TxnOffsetCommit &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:15" time="0.636" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; TxnOffsetCommit &gt; v1 response" name="Protocol &gt; Requests &gt; TxnOffsetCommit &gt; v1 response" time="0.011">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; TxnOffsetCommit &gt; v1 throws KafkaJSProtocolError if there is an error on any of the partitions" name="Protocol &gt; Requests &gt; TxnOffsetCommit &gt; v1 throws KafkaJSProtocolError if there is an error on any of the partitions" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; JoinGroup &gt; v4" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:15" time="0.652" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; JoinGroup &gt; v4 response" name="Protocol &gt; Requests &gt; JoinGroup &gt; v4 response" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; DeleteTopics &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:15" time="0.555" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; DeleteTopics &gt; v0 response" name="Protocol &gt; Requests &gt; DeleteTopics &gt; v0 response" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Fetch &gt; v3" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:15" time="0.615" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v3 response" name="Protocol &gt; Requests &gt; Fetch &gt; v3 response" time="0.034">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v3 response with GZIP" name="Protocol &gt; Requests &gt; Fetch &gt; v3 response with GZIP" time="0.067">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; LeaveGroup &gt; v3" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:15" time="0.674" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; LeaveGroup &gt; v3 response" name="Protocol &gt; Requests &gt; LeaveGroup &gt; v3 response" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; LeaveGroup &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:15" time="0.594" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; LeaveGroup &gt; v1 response" name="Protocol &gt; Requests &gt; LeaveGroup &gt; v1 response" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Metadata &gt; v3" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:15" time="0.672" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v3 response" name="Protocol &gt; Requests &gt; Metadata &gt; v3 response" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; SyncGroup &gt; v3" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:15" time="0.667" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; SyncGroup &gt; v3 response" name="Protocol &gt; Requests &gt; SyncGroup &gt; v3 response" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Metadata &gt; v4" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.533" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Metadata &gt; v4 response" name="Protocol &gt; Requests &gt; Metadata &gt; v4 response" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.524" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v0 response" name="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v0 response" time="0.017">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v0 throws KafkaJSProtocolError if there is an error on any of the partitions" name="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v0 throws KafkaJSProtocolError if there is an error on any of the partitions" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; JoinGroup &gt; v5" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.486" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; JoinGroup &gt; v5 response" name="Protocol &gt; Requests &gt; JoinGroup &gt; v5 response" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; ListOffsets &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.513" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; ListOffsets &gt; v2 response" name="Protocol &gt; Requests &gt; ListOffsets &gt; v2 response" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; AlterConfigs &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.518" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; AlterConfigs &gt; v0 response" name="Protocol &gt; Requests &gt; AlterConfigs &gt; v0 response" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Fetch &gt; v11" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.592" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v11 response" name="Protocol &gt; Requests &gt; Fetch &gt; v11 response" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Heartbeat &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.637" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Heartbeat &gt; v2 response" name="Protocol &gt; Requests &gt; Heartbeat &gt; v2 response" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Produce &gt; v6" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.62" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Produce &gt; v6 response" name="Protocol &gt; Requests &gt; Produce &gt; v6 response" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; ListOffsets &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.629" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; ListOffsets &gt; v1 response" name="Protocol &gt; Requests &gt; ListOffsets &gt; v1 response" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; ListOffsets &gt; v3" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.512" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; ListOffsets &gt; v3 response" name="Protocol &gt; Requests &gt; ListOffsets &gt; v3 response" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; DescribeAcls &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.552" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; DescribeAcls &gt; v0 response" name="Protocol &gt; Requests &gt; DescribeAcls &gt; v0 response" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; CreateAcls &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.566" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; CreateAcls &gt; v1 response" name="Protocol &gt; Requests &gt; CreateAcls &gt; v1 response" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.537" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v1 response" name="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v1 response" time="0.016">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v1 throws KafkaJSProtocolError if there is an error on any of the partitions" name="Protocol &gt; Requests &gt; AddPartitionsToTxn &gt; v1 throws KafkaJSProtocolError if there is an error on any of the partitions" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; DescribeAcls &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.638" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; DescribeAcls &gt; v1 response" name="Protocol &gt; Requests &gt; DescribeAcls &gt; v1 response" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; SyncGroup &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.645" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; SyncGroup &gt; v1 response" name="Protocol &gt; Requests &gt; SyncGroup &gt; v1 response" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; LeaveGroup &gt; v2" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.589" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; LeaveGroup &gt; v2 response" name="Protocol &gt; Requests &gt; LeaveGroup &gt; v2 response" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Offsets &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.641" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Offsets &gt; v0 response" name="Protocol &gt; Requests &gt; Offsets &gt; v0 response" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; OffsetFetch &gt; v3" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.67" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; OffsetFetch &gt; v3 response" name="Protocol &gt; Requests &gt; OffsetFetch &gt; v3 response" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; OffsetCommit &gt; v3" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.659" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; OffsetCommit &gt; v3 response" name="Protocol &gt; Requests &gt; OffsetCommit &gt; v3 response" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; OffsetCommit &gt; v4" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.608" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; OffsetCommit &gt; v4 response" name="Protocol &gt; Requests &gt; OffsetCommit &gt; v4 response" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; CreateTopics &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:17" time="0.596" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; CreateTopics &gt; v1 response" name="Protocol &gt; Requests &gt; CreateTopics &gt; v1 response" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; DeleteAcls &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:16" time="0.664" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; DeleteAcls &gt; v0 response" name="Protocol &gt; Requests &gt; DeleteAcls &gt; v0 response" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; OffsetCommit &gt; v5" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:17" time="0.533" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; OffsetCommit &gt; v5 response" name="Protocol &gt; Requests &gt; OffsetCommit &gt; v5 response" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; DeleteAcls &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:17" time="0.59" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; DeleteAcls &gt; v1 response" name="Protocol &gt; Requests &gt; DeleteAcls &gt; v1 response" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Produce &gt; v4" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:17" time="0.58" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Produce &gt; v4 response" name="Protocol &gt; Requests &gt; Produce &gt; v4 response" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; DescribeConfigs &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:17" time="0.541" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; DescribeConfigs &gt; v1 response" name="Protocol &gt; Requests &gt; DescribeConfigs &gt; v1 response" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; DeleteRecords &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:17" time="0.567" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; DeleteRecords &gt; v0 response - success" name="Protocol &gt; Requests &gt; DeleteRecords &gt; v0 response - success" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; OffsetCommit &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:17" time="0.557" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; OffsetCommit &gt; v0 response" name="Protocol &gt; Requests &gt; OffsetCommit &gt; v0 response" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; CreateAcls &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:17" time="0.546" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; CreateAcls &gt; v0 response" name="Protocol &gt; Requests &gt; CreateAcls &gt; v0 response" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; TxnOffsetCommit &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:17" time="0.479" tests="2">
    <testcase classname="Protocol &gt; Requests &gt; TxnOffsetCommit &gt; v0 response" name="Protocol &gt; Requests &gt; TxnOffsetCommit &gt; v0 response" time="0.011">
    </testcase>
    <testcase classname="Protocol &gt; Requests &gt; TxnOffsetCommit &gt; v0 throws KafkaJSProtocolError if there is an error on any of the partitions" name="Protocol &gt; Requests &gt; TxnOffsetCommit &gt; v0 throws KafkaJSProtocolError if there is an error on any of the partitions" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; OffsetFetch &gt; v4" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:17" time="0.56" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; OffsetFetch &gt; v4 response" name="Protocol &gt; Requests &gt; OffsetFetch &gt; v4 response" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; sasl &gt; scram &gt; firstMessage" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:17" time="0.519" tests="1">
    <testcase classname="Protocol &gt; sasl &gt; scram &gt; firstMessage response" name="Protocol &gt; sasl &gt; scram &gt; firstMessage response" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; OffsetFetch &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:17" time="0.492" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; OffsetFetch &gt; v1 response" name="Protocol &gt; Requests &gt; OffsetFetch &gt; v1 response" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; Fetch &gt; v5" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:17" time="0.518" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; Fetch &gt; v5 response" name="Protocol &gt; Requests &gt; Fetch &gt; v5 response" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; OffsetCommit &gt; v1" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:17" time="0.393" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; OffsetCommit &gt; v1 response" name="Protocol &gt; Requests &gt; OffsetCommit &gt; v1 response" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Protocol &gt; Requests &gt; DescribeGroups &gt; v0" errors="0" failures="0" skipped="0" timestamp="2021-08-19T01:41:18" time="0.347" tests="1">
    <testcase classname="Protocol &gt; Requests &gt; DescribeGroups &gt; v0 response" name="Protocol &gt; Requests &gt; DescribeGroups &gt; v0 response" time="0.007">
    </testcase>
  </testsuite>
</testsuites>